name: Build and Push

on:
  workflow_dispatch: {}
  repository_dispatch:
    types: [release-triggered]

env:
  APP: web-app
  REGISTRY: ghcr.io
  IMAGE_NAME:  ${{ github.repository }}
  TRIVY_USERNAME: ${{ github.actor }}
  TRIVY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

jobs:

  build_docker_and_push_to_github_packages:
    name: Build and Push Docker image.
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.APP }},suffix=-${{ github.run_number }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push container image
        uses: docker/build-push-action@v5
        with:
          build-args: VERSION=${{ github.event.client_payload.version }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile
          platforms: linux/amd64

      - name: Run Trivy vulnerability scanner in image mode
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: '${{ steps.meta.outputs.tags }}'
          scan-type: 'image'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Install kind, kubectl & kustomize
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo mv kustomize /usr/local/bin/

      - name: Create kind Cluster
        run: |
          kind create cluster --name test-cluster

      - name: Load Image into kind
        run: |
          docker pull ${{ steps.meta.outputs.tags }}
          kind load docker-image ${{ steps.meta.outputs.tags }} --name test-cluster

      - uses: actions/checkout@v4

      - name: "Update Deployment Image Tag" # [3]
        working-directory: "manifests"
        run: |
          kustomize edit set image image-name=${{ steps.meta.outputs.tags }}

      - name: Deploy to kind
        run: |
          kubectl apply -k manifests/base

      - name: Wait for Deployment to be Ready
        run: |
          kubectl wait --for=condition=available --timeout=60s deployment/${{ env.APP }}

      - name: Run Test to Verify Application
        run: |
          kubectl run curl-pod --image=curlimages/curl --restart=Never -- curl -s http:/web-app.default.svc:8080
          kubectl wait --for=jsonpath='{.status.phase}'=Succeeded  --timeout=30s pod/curl-pod
          kubectl logs curl-pod

      - name: Cleanup kind Cluster
        if: always()
        run: |
          kind delete cluster --name test-cluster
